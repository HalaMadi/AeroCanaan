// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  firstName String
  lastName  String
  email     String    @unique
  mobile    String    @unique
  password  String
  role      Role      @default(USER)
  bookings  Booking[]
}

model Trip {
  id             String    @id @default(uuid())
  title          String
  slug           String
  destination    String
  duration       Int
  start_date     DateTime
  end_date       DateTime
  price          Float
  originalPrice  Float?
  discountPrice  Float?
  seats          Int
  image          String
  rating         Int
  featured       Boolean   @default(false)
  description    String?
  isFeatured     Boolean   @default(false)
  isSpecialOffer Boolean   @default(false)
  hasDiscount    Boolean   @default(false)
  bookings       Booking[]
  placeId        String?
  place          Place?    @relation(fields: [placeId], references: [id])
}

model Booking {
  id     String        @id @default(uuid())
  user   User          @relation(fields: [userId], references: [id])
  userId String
  trip   Trip          @relation(fields: [tripId], references: [id])
  tripId String
  status BookingStatus @default(PENDING)
}

model Place {
  id                     String  @id @default(uuid())
  name                   String
  slug                   String  @unique
  category               String
  shortDesc              String
  fullDesc               String
  location               String
  bestTimeToVisit        String
  accessibilityInfo      String
  historicalSignificance String?
  culturalImportance     String?
  localTips              String
  images                 Image[]
  trips                  Trip[]
}

enum Role {
  USER
  ADMIN
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
}

model Image {
  id      String @id @default(uuid())
  url     String
  place   Place  @relation(fields: [placeId], references: [id])
  placeId String
}
